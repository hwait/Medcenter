<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
					xmlns:infrastructure="clr-namespace:Medcenter.Desktop.Infrastructure;assembly=Medcenter.Desktop.Infrastructure"
					mc:Ignorable="d" 
					xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing">
	<Style x:Key="ButtonMenuStyle" TargetType="{x:Type Button}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="32"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Rectangle x:Name="rectangle" Fill="#FF3939C5" Stroke="{x:Null}" Grid.ColumnSpan="2"/>
						<ContentControl Content="{Binding (infrastructure:ButtonExtender.Icon), RelativeSource={RelativeSource TemplatedParent}}" x:Name="IconContent" Margin="3" HorizontalAlignment="Center" VerticalAlignment="Center" />
						<TextBlock x:Name="textBlock" Margin="4" TextWrapping="Wrap" Text="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="1" Foreground="White" FontSize="13.333"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="True"/>
						
						<!--    Default button      -->
						
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="Default"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Fill" TargetName="rectangle" Value="#FF3939C5"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="Default"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Fill" TargetName="rectangle" Value="#FF6060FF"/>
						</MultiDataTrigger>

						<!--    New button      -->

						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="New"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Fill" TargetName="rectangle" Value="DodgerBlue"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="New"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Fill" TargetName="rectangle" Value="CadetBlue"/>
						</MultiDataTrigger>

						<!--    Copy button      -->

						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="Copy"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Fill" TargetName="rectangle" Value="SaddleBrown"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="Copy"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Fill" TargetName="rectangle" Value="SandyBrown"/>
						</MultiDataTrigger>

						<!--    Delete button      -->

						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="Delete"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Fill" TargetName="rectangle" Value="DarkRed"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="Delete"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Fill" TargetName="rectangle" Value="MediumVioletRed"/>
						</MultiDataTrigger>

						<!--    Call button      -->

						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="Call"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Fill" TargetName="rectangle" Value="BlueViolet"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="Call"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Fill" TargetName="rectangle" Value="Violet"/>
						</MultiDataTrigger>

						<!--    Pay button      -->

						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="Pay"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Fill" TargetName="rectangle" Value="Goldenrod"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="Pay"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Fill" TargetName="rectangle" Value="Gold"/>
						</MultiDataTrigger>
						
						<!--    Save button      -->

						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="Save"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Fill" TargetName="rectangle" Value="DarkGreen"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="Save"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Fill" TargetName="rectangle" Value="ForestGreen"/>
						</MultiDataTrigger>
						<Trigger Property="IsPressed" Value="True"/>
						<Trigger Property="IsEnabled" Value="False"/>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="MainViewRadioButtonStyle" TargetType="ToggleButton">
		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="Foreground" Value="#FF0E233E"/>
		<Setter Property="Padding" Value="3"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="BorderBrush" Value="#FF204d89" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBackground" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedBackground" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Indeterminate"/>
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedBackground" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="BaseBackground" BorderBrush="{x:Null}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" Background="#FF1318A3"/>
						<Border x:Name="MouseOverBackground" BorderBrush="{x:Null}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" Opacity="0" Background="#FF494599"/>
						<Border x:Name="PressedBackground" BorderBrush="{x:Null}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" Opacity="0" Background="#FFFF3B3B"/>
						<Border x:Name="CheckedBackground" BorderBrush="{x:Null}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" Opacity="0" Background="#FFBB4400"/>
						<!--<Grid Margin="{TemplateBinding BorderThickness}">-->
							<ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						<!--</Grid>-->
						<Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" Opacity="0" RadiusY="0" RadiusX="0" Stroke="{x:Null}" StrokeThickness="1" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="TextButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="True"/>
						<Trigger Property="IsDefaulted" Value="True"/>
						<Trigger Property="IsMouseOver" Value="True"/>
						<Trigger Property="IsPressed" Value="True"/>
						<Trigger Property="IsEnabled" Value="False"/>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontFamily" Value="Vrinda"/>
		<Setter Property="FontSize" Value="14.667"/>
	</Style>
	<Style x:Key="LocalButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Rectangle x:Name="rectangle" Fill="#FF0B0B93" Stroke="{x:Null}"/>
						<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Fill" TargetName="rectangle" Value="#FF6060DA"/>
						</Trigger>
						<Trigger Property="IsFocused" Value="True"/>
						<Trigger Property="IsDefaulted" Value="True"/>
						<Trigger Property="IsMouseOver" Value="True"/>
						<Trigger Property="IsPressed" Value="True"/>
						<Trigger Property="IsEnabled" Value="False"/>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
</ResourceDictionary>