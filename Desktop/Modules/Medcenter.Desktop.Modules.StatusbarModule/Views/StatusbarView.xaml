<UserControl x:Class="Medcenter.Desktop.Modules.StatusbarModule.Views.StatusbarView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:ds="clr-namespace:Medcenter.Desktop.Modules.StatusbarModule.SampleData" 
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
             mc:Ignorable="d" 
			 d:DataContext="{Binding Source={StaticResource DesignData}}"
			 HorizontalAlignment="Stretch">
	<UserControl.Resources>
		<ds:DesignData x:Key="DesignData"></ds:DesignData>
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
		<Style x:Key="StatusbarButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid HorizontalAlignment="Stretch">
							<Rectangle Fill="{x:Null}" Stroke="{x:Null}"/>
							<ContentPresenter HorizontalAlignment="Stretch" RecognizesAccessKey="True" VerticalAlignment="Stretch"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="StatusMessageButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid HorizontalAlignment="Stretch">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="24"/>
								<ColumnDefinition Width="120"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Rectangle Fill="#FFF4F4F5" Grid.ColumnSpan="3" HorizontalAlignment="Stretch"/>
							<Image Width="Auto" Height="Auto" Margin="5">
								<Image.Style>
									<Style TargetType="Image">
										<Style.Triggers>
											<DataTrigger  Binding="{Binding AggregateMessage.ErrorType}" Value="0">
												<Setter Property="Source" Value="../Assets/NotificationOk.png"/>
											</DataTrigger >
											<DataTrigger  Binding="{Binding AggregateMessage.ErrorType}" Value="1">
												<Setter Property="Source" Value="../Assets/NotificationWarning.png"/>
											</DataTrigger >
											<DataTrigger  Binding="{Binding AggregateMessage.ErrorType}" Value="2">
												<Setter Property="Source" Value="../Assets/NotificationError.png"/>
											</DataTrigger >
										</Style.Triggers>
									</Style>
								</Image.Style>
							</Image>
							<TextBlock HorizontalAlignment="Stretch" TextWrapping="Wrap" Text="{Binding AggregateMessage.Source}" VerticalAlignment="Center" Margin="5,3,0,0" Height="22" Width="96" Grid.Column="1" FontWeight="Bold"/>
							<TextBlock HorizontalAlignment="Stretch" Margin="5,3,0,0" TextWrapping="Wrap" Text="{Binding AggregateMessage.Message}" VerticalAlignment="Center" Grid.Column="2" Width="Auto" Height="22" FontSize="12" FontWeight="Bold"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
        <Style x:Key="CustomProgressBarStyle" TargetType="telerik:RadProgressBar">
            <Setter Property="Foreground" Value="#FF027DB8"/>
            <Setter Property="Background" Value="#FFD2D5D8"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Maximum" Value="100"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint=".5,1" StartPoint=".5,0">
                        <GradientStop Color="#FFAEB7BF" Offset="0"/>
                        <GradientStop Color="#FF919EA7" Offset="0.35"/>
                        <GradientStop Color="#FF7A8A99" Offset="0.35"/>
                        <GradientStop Color="#FF647480" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Margin" Value="0,0,0,-25"/>
        </Style>
        <DataTemplate x:Key="ErrorMessageTemplate">
			<Grid Height="24" Width="Auto"  HorizontalAlignment="Stretch">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="24"/>
					<ColumnDefinition Width="120"/>
					<ColumnDefinition Width="100"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>
				<Image Width="Auto" Height="Auto" Margin="5">
					<Image.Style>
						<Style TargetType="Image">
							<Style.Triggers>
								<DataTrigger  Binding="{Binding ErrorType}" Value="0">
									<Setter Property="Source" Value="../Assets/NotificationOk.png"/>
								</DataTrigger >
								<DataTrigger  Binding="{Binding ErrorType}" Value="1">
									<Setter Property="Source" Value="../Assets/NotificationWarning.png"/>
								</DataTrigger >
								<DataTrigger  Binding="{Binding ErrorType}" Value="2">
									<Setter Property="Source" Value="../Assets/NotificationError.png"/>
								</DataTrigger >
							</Style.Triggers>
						</Style>
					</Image.Style>
				</Image>
				<TextBlock Text="{Binding Dt}" Grid.Column="1" Margin="3"/>
				<TextBlock Text="{Binding Source}" Grid.Column="2" Margin="3"/>
				<TextBlock Text="{Binding Message}" Grid.Column="3" Margin="3,3,0,3" HorizontalAlignment="Stretch"/>
				
			</Grid>
		</DataTemplate>
	</UserControl.Resources>
    <Grid HorizontalAlignment="Stretch">
    	<Grid.RowDefinitions>
    		<RowDefinition Height="Auto"/>
    		<RowDefinition Height="22"/>
    	</Grid.RowDefinitions>
    	<Grid.ColumnDefinitions>
    		<ColumnDefinition Width="*"/>
    		<ColumnDefinition Width="32"/>
    	</Grid.ColumnDefinitions>
    	<Button Content="{DynamicResource IconButtons.View}" Grid.Column="1" HorizontalAlignment="Right" Grid.Row="1" Style="{DynamicResource StatusbarButtonStyle}" VerticalAlignment="Top" Height="22" Width="22" />
        
        <!--<telerik:RadBusyIndicator Grid.Row="1" IsBusy="{Binding BusyIndicator, Mode=OneWay}">-->
        <StackPanel Grid.Row="1" Orientation="Vertical">
            <Button Content="{Binding AggregateMessage, Mode=OneWay}" Margin="1,0,0,0" Style="{DynamicResource StatusMessageButtonStyle}" HorizontalAlignment="Stretch" Command="{Binding ShowMessagesListCommand}"  Visibility="{Binding StatusButtonIndicator, Converter={StaticResource BoolToVis}, FallbackValue=Hidden}"/>
            <Rectangle Fill="#009966" HorizontalAlignment="Stretch" Height="22"  Visibility="{Binding BusyIndicator, Converter={StaticResource BoolToVis}, FallbackValue=Hidden}"/>
        </StackPanel>
        <!--</telerik:RadBusyIndicator>-->
            <ListView HorizontalAlignment="Stretch" Margin="1,0,0,0" VerticalAlignment="Top" Grid.ColumnSpan="2" ItemTemplate="{DynamicResource ErrorMessageTemplate}" ItemsSource="{Binding StatusMessages}" Visibility="{Binding IsMessagesListShow, Converter={StaticResource BoolToVis}, FallbackValue=Hidden}"/>
    </Grid>
</UserControl>
